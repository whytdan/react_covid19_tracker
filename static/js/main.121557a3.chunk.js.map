{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","index","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.121557a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid  } from '@material-ui/core';\nimport CountUp from 'react-countup'\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css'\n\n\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate }}) => {\n  \n  if(!confirmed){\n    return 'Loading...'\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={2} justify=\"center\">\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={confirmed.value} duration={2} separator=\",\"/>\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n\n          </CardContent>\n        </Grid>\n\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={recovered.value} duration={2} separator=\",\"/>\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of recovories from COVID-19</Typography>\n\n          </CardContent>\n        </Grid>\n\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={deaths.value} duration={2} separator=\",\"/>\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n\n  let changableUrl = url;\n\n  if(country) {\n    changableUrl = `${url}/countries/${country}`\n  }\n\n  try {\n    const {data: { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changableUrl);\n\n    return {confirmed, recovered, deaths ,lastUpdate};\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    const modifiedData = data.map(dailyData => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }))\n\n    console.log('Daily: ', modifiedData)\n\n    return modifiedData;\n\n  } catch (error) {\n    console.log(error);\n  }\n} \n\nexport const fetchCountries = async () => {\n  try {\n    \n    const {data: { countries }} = await axios.get(`${url}/countries`)\n    \n    return countries.map(country=> country.name);\n\n  } catch (error) {\n    console.log(error);\n    \n  }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api/';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css'\n\nconst Chart = ({data: {confirmed, deaths, recovered}, country}) => {\n\n  const [dailyData, setDailyData] = useState([])\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    }\n\n    fetchAPI();\n    \n  }, [])\n\n  const lineChart = (\n    dailyData.length \n    ? (<Line\n      data={{\n        labels: dailyData.map(({date}) => date),\n        datasets: [{\n          data: dailyData.map(({confirmed}) => confirmed),\n          label: 'Infected',\n          borderColor: '#3333ff',\n          fill: true,\n        }, {\n          data: dailyData.map(({deaths}) => deaths),\n          label: 'Infected',\n          borderColor: 'red',\n          backgroundColor: 'rgba(255, 0, 0, 0.5)',\n          fill: true,\n        }],\n      }}\n    />) : null \n  );\n\n  const barChart = (\n    confirmed \n    ? (\n      <Bar\n\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [{\n            label: 'People',\n            backgroundColor: [\n              'rgba(0,0,255,0.5)',\n              'rgba(0,255,0,0.5)',\n              'rgba(255,0,0,0.5)'\n            ],\n            data: [confirmed.value, recovered.value, deaths.value]\n          }]\n        }}\n\n        options={{\n          legend: {display:false},\n          title: {display:true, text: `Current state in ${country}`}\n        }}\n\n      />\n    ) : null\n\n  )\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  )\n}\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core'\n\nimport styles from './CountryPicker.module.css'\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries())\n    }\n\n    fetchAPI()\n  }, [setFetchedCountries])\n\n  console.log(fetchedCountries);\n\n  return (\n      <FormControl className={styles.formControl}>\n        <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n          <option value=\"\">Global</option>\n          {fetchedCountries.map((country, index) => <option key={index} value={country}>{country}</option>)}\n        </NativeSelect>\n      </FormControl>\n\n  )\n}\n\n\nexport default CountryPicker;","import React from 'react';\nimport {Cards, Chart, CountryPicker} from './components/'\nimport styles from './App.module.css'\nimport { fetchData } from './api';\n\nimport coronaImage from './images/image.png'\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({ data:fetchedData })\n  }\n\n  handleCountryChange = async country => {\n\n    const fetchedData = await fetchData(country);\n    this.setState({ data:fetchedData, country: country })\n    \n  }\n\n  render() {\n\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}